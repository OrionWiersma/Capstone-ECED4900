% This script simulates the change of rectifier potassium current (IKr),
% and its effect on AP's within single cardiac cells. Since IKr contributes 
% repolarization phase of the cardiac action potential
clear; clc; close all;

% ----------------------------------------------
% Parameters for simulation (protocol 0)
% ----------------------------------------------
BCL = 500;          % Basic cycle length (ms)
nrepeat = 10;       % Number of beats (use 10 for faster test)

CONSTANTS = mod_param();  % load all baseline constants

IKr_scale = 1;

% Load model parameters and initial conditions
STATES0 = initial_cond([]);  % Start fresh, or pass in a mat file

% Solver options
options = odeset('RelTol', 1e-6, 'AbsTol', 1e-6, 'MaxStep', 1);
tspan = [0 BCL];  % Simulate one beat at a time

% ----------------------------------------------
% Initialize live plot
% ----------------------------------------------
figure;
h_line = plot(nan, nan, 'b', 'LineWidth', 1.5);
xlabel('Time (ms)');
ylabel('Voltage (mV)');
title('Live AP Simulation');
grid on;
xlim([0 BCL]);
ylim([-100 50]);
drawnow;

% Store full trace
all_t = [];
all_V = [];

% ----------------------------------------------
% Run simulation loop with user input for IKr
% ----------------------------------------------
for j = 1:nrepeat
    fprintf('Beat %d/%d\n', j, nrepeat);

    CONSTANTS = mod_param();
    CONSTANTS.GKr = CONSTANTS.GKr * IKr_scale;

    tic;
    [t, STATES] = ode15s(@computerates, tspan, STATES0, options, CONSTANTS, 1, 1);
    STATES0 = STATES(end, :);

    all_t = [all_t; t + BCL*(j-1)];
    all_V = [all_V; STATES(:,1)];

    %set(h_line, 'XData', all_t, 'YData', all_V);
    %xlim([0, BCL * j]);
    set(h_line, 'XData', t, 'YData', STATES(:,1));  % only current beat's time & voltage
    xlim([0 BCL]);

    title(sprintf('Live AP Beat %d - IKr scale %.2f', j, IKr_scale));
    drawnow limitrate;

    % Adjusted simulation time, to actual time
    %elapsed = toc;
    %sim_time_sec = BCL / 1000;
    %if elapsed < sim_time_sec
    %    pause(sim_time_sec - elapsed);
    %end

    % Prompt user for new IKr scale
    prompt = sprintf('Current IKr scale = %.2f. Enter new IKr scale (or press Enter to keep): ', IKr_scale);
    user_input = input(prompt, 's');
    if ~isempty(user_input)
        val = str2double(user_input);
        if ~isnan(val) && val > 0
            IKr_scale = val;
        else
            fprintf('Invalid input, keeping previous value %.2f\n', IKr_scale);
        end
    end
end

% ----------------------------------------------
% Final full trace plot (optional)
% ----------------------------------------------
figure;
plot(all_t, all_V, 'k');
xlabel('Time (ms)');
ylabel('Voltage (mV)');
title('Full AP Simulation');
xlim([0 BCL * nrepeat]);
ylim([-100 50]);
grid on;

fprintf('Simulation finished.\n');

% Save data
save('live_simulation_protocol0.mat', 'all_t', 'all_V');
